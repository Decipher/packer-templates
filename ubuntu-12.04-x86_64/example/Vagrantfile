# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'
dir = File.dirname(File.expand_path(__FILE__))
vagrant_config = "#{dir}/vagrant.box.yml"
if !File.exist?(vagrant_config)
  raise 'Vagrant configuration file vagrant.box.yml not found!'
end
vconfig = YAML::load_file(vagrant_config)

Vagrant.require_version '>= 1.7.0'

Vagrant.configure("2") do |config|

  config.vm.box = vconfig['vagrant_box']
  config.vm.hostname = vconfig['vagrant_hostname']
  config.vm.network :private_network, ip: vconfig['vagrant_ip']
  config.ssh.insert_key = false
  config.ssh.forward_agent = true

  # Synced folders.
  for synced_folder in vconfig['vagrant_synced_folders'];
    config.vm.synced_folder synced_folder['local_path'], synced_folder['destination'],
      type: synced_folder['type'],
      rsync__auto: "true",
      rsync__exclude: synced_folder['excluded_paths'],
      rsync__args: ["--verbose", "--archive", "--delete", "-z", "--chmod=ugo=rwX"],
      id: synced_folder['id']
  end

  # Ansible
  ansible_config = "#{dir}/vagrant.ansible.yml"
  if File.exist?(ansible_config)

    # Upload vagrant.ansible.yml
    config.vm.provision "vagrant.ansible.yml", type: "file" do |s|
     s.source = ansible_config
     s.destination = "/ansible/local.config.yml"
    end

    # Provision box
    config.vm.provision "ansible", type: "shell" do |s|
      s.privileged = true
      s.inline = 'ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 ansible-playbook /ansible/playbook.yml --sudo -c local -i "127.0.0.1vagrant,"'
    end

  end

  # VirtualBox.
  config.vm.provider :virtualbox do |v|
    v.name = vconfig['vagrant_hostname']
    v.memory = vconfig['vagrant_memory']
    v.cpus = vconfig['vagrant_cpus']
    v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    v.customize ["modifyvm", :id, "--ioapic", "on"]
  end

  # Vagrant Host Updater
  if Vagrant.has_plugin?('vagrant-hostsupdater')
    aliases = Array.new()
    if vconfig['apache_vhosts']
      vconfig['apache_vhosts'].each do |vhost|
        aliases.push(vhost['servername'])
      end
    end

    aliases.delete_if { |x| x == vconfig['vagrant_hostname'] }

    if aliases.any?
    config.hostsupdater.aliases = aliases
    end
  end

end